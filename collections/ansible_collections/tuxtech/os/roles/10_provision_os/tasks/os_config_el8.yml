---
# Base OS configuration for EL/CentOS 8
- name: 'Put SELinux in permissive mode, logging actions that would be blocked.'
  ansible.posix.selinux:
    policy: 'targeted'
    state: 'permissive'


- name: 'Update OS software'
  ansible.builtin.dnf:
    name: '*'
    update_only: true
    enablerepo:
      - 'baseos'
      - 'app-stream'
      - 'extras'
    disablerepo: '*'
    state: 'latest'


- name: 'Install required packages'
  ansible.builtin.dnf:
    name:
      - 'cockpit'
      - 'cockpit-packagekit'
      - 'cockpit-storaged'
      - 'cockpit-ws'
      - 'mlocate'
      - 'postfix'
      - 'vim'
      # - 'httpd'
      # - 'nfs-utils'
      # - 'samba'
      # - 'samba-client'
      # - '@mysql:8.0/server'
      # -  '@php:7.2/common'


- name: 'System Config: services'
  ansible.builtin.service:
    name: '{{ item.name }}'
    state: '{{ item.state }}'
    enabled: '{{ item.enabled }}'
  loop:
    - {name: 'atd', state: 'started', enabled: true}
    - {name: 'auditd', state: 'started', enabled: true}
    - {name: 'chronyd', state: 'started', enabled: true}
    - {name: 'cockpit.socket', state: 'started', enabled: true}
    - {name: 'crond', state: 'started', enabled: true}
    - {name: 'dbus', state: 'started', enabled: true}
    - {name: 'firewalld', state: 'stopped', enabled: false}
    - {name: 'NetworkManager', state: 'started', enabled: true}
    - {name: 'polkit', state: 'started', enabled: true}
    - {name: 'postfix', state: 'started', enabled: true}
    - {name: 'rsyslog', state: 'started', enabled: true}
    - {name: 'sshd', state: 'started', enabled: true}
    - {name: 'sssd', state: 'started', enabled: true}
    - {name: 'tuned', state: 'started', enabled: true}
    - {name: 'vmtoolsd', state: 'started', enabled: true}
    # - {name: 'httpd', state: 'started', enabled: true}
    # - { name: 'libstoragemgmt',   state: 'stopped',   enabled: false }
    # - { name: 'mcelog',           state: 'stopped',   enabled: false }
    # - { name: 'mysqld',           state: 'started',   enabled: true }
    # - { name: 'nmb',              state: 'started',   enabled: true }
    # - { name: 'rngd',             state: 'started',   enabled: true }
    # - { name: 'smb',              state: 'started',   enabled: true }
    # - { name: 'smartd',           state: 'stopped',   enabled: false }


# - name: 'Create UserIDs'
#   ansible.builtin.user:
#     name: 'len'
#     comment: 'Len Goldenstein'
#     groups: 'wheel'


# - name: 'Configure /etc/sudoers'
#   ansible.builtin.lineinfile:
#     path: '/etc/sudoers'
#     state: 'present'
#     regexp: '{{ item.regexp }}'
#     line: '{{ item.line }}'
#   loop:
#     - {regexp: '\%wheel\s+ALL=\(ALL\)\s+ALL$', line: '#%wheel  ALL=(ALL)       ALL'}
#     - {regexp: '\%wheel\s+ALL=\(ALL\)\s+NOPASSWD\:\sALL$', line: '%wheel        ALL=(ALL)       NOPASSWD: ALL'}


- name: 'Configure grub'
  ansible.builtin.lineinfile:
    path: '/etc/default/grub'
    state: 'present'
    regexp: '^(GRUB_CMDLINE_LINUX=)(.*) rhgb quiet'
    line: '\1\2"'
    backrefs: true
  notify: 'rebuild grub'


- name: 'System Config: bash'
  ansible.builtin.copy:
    dest: '/etc/profile.d/local.sh'
    owner: 'root'
    group: 'root'
    mode: '0644'
    content: |
      alias ll='ls -l --color=auto -F'
      alias ls='ls --color=auto -F'
      alias df='df -h'
      alias rm='rm -i'
      alias vi='vim'
      export PS1="[\u@\h \w]\$ "


- name: 'System Config: logrotate'
  ansible.builtin.lineinfile:
    path: '/etc/logrotate.conf'
    state: 'present'
    regexp: 'compress'
    line: 'compress'


- name: 'System Config: postfix'
  ansible.builtin.blockinfile:
    path: '/etc/postfix/main.cf'
    state: 'present'
    block: 'relayhost = [mail.tuxtech.com]'
    insertafter: 'EOF'
  notify: 'restart postfix'


- name: 'Join idm.tuxtech.com IDM domain'
  ansible.builtin.include_tasks: 'ipa-client-install.yml'
  tags: 'idm_client'


- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers
